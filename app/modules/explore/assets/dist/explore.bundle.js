/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./app/modules/explore/assets/js/scripts.js":
/*!**************************************************!*\
  !*** ./app/modules/explore/assets/js/scripts.js ***!
  \**************************************************/
/***/ (() => {

eval("document.addEventListener('DOMContentLoaded', () => {\n    send_query();\n});\n\nfunction send_query() {\n\n    console.log(\"send query...\")\n\n    document.getElementById('results').innerHTML = '';\n    document.getElementById(\"results_not_found\").style.display = \"none\";\n    console.log(\"hide not found icon\");\n\n    const filters = document.querySelectorAll('#filters input, #filters select, #filters [type=\"radio\"]');\n\n    filters.forEach(filter => {\n        filter.addEventListener('input', () => {\n            const csrfToken = document.getElementById('csrf_token').value;\n\n            const searchCriteria = {\n                csrf_token: csrfToken,\n                query: document.querySelector('#query').value,\n                publication_type: document.querySelector('#publication_type').value,\n                sorting: document.querySelector('[name=\"sorting\"]:checked').value,\n            };\n\n            console.log(document.querySelector('#publication_type').value);\n\n            fetch('/explore', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(searchCriteria),\n            })\n                .then(response => response.json())\n                .then(data => {\n\n                    console.log(data);\n                    document.getElementById('results').innerHTML = '';\n\n                    // results counter\n                    const resultCount = data.length;\n                    const resultText = resultCount === 1 ? 'dataset' : 'datasets';\n                    document.getElementById('results_number').textContent = `${resultCount} ${resultText} found`;\n\n                    if (resultCount === 0) {\n                        console.log(\"show not found icon\");\n                        document.getElementById(\"results_not_found\").style.display = \"block\";\n                    } else {\n                        document.getElementById(\"results_not_found\").style.display = \"none\";\n                    }\n\n\n                    data.forEach(dataset => {\n                        let card = document.createElement('div');\n                        card.className = 'col-12';\n                        card.innerHTML = `\n                            <div class=\"card\">\n                                <div class=\"card-body\">\n                                    <div class=\"d-flex align-items-center justify-content-between\">\n                                        <h3><a href=\"${dataset.url}\">${dataset.title}</a></h3>\n                                        <div>\n                                            <span class=\"badge bg-primary\" style=\"cursor: pointer;\" onclick=\"set_publication_type_as_query('${dataset.publication_type}')\">${dataset.publication_type}</span>\n                                        </div>\n                                    </div>\n                                    <p class=\"text-secondary\">${formatDate(dataset.created_at)}</p>\n\n                                    <div class=\"row mb-2\">\n\n                                        <div class=\"col-md-4 col-12\">\n                                            <span class=\" text-secondary\">\n                                                Description\n                                            </span>\n                                        </div>\n                                        <div class=\"col-md-8 col-12\">\n                                            <p class=\"card-text\">${dataset.description}</p>\n                                        </div>\n\n                                    </div>\n\n                                    <div class=\"row mb-2\">\n\n                                        <div class=\"col-md-4 col-12\">\n                                            <span class=\" text-secondary\">\n                                                Authors\n                                            </span>\n                                        </div>\n                                        <div class=\"col-md-8 col-12\">\n                                            ${dataset.authors.map(author => `\n                                                <p class=\"p-0 m-0\">${author.name}${author.affiliation ? ` (${author.affiliation})` : ''}${author.orcid ? ` (${author.orcid})` : ''}</p>\n                                            `).join('')}\n                                        </div>\n\n                                    </div>\n\n                                    <div class=\"row mb-2\">\n\n                                        <div class=\"col-md-4 col-12\">\n                                            <span class=\" text-secondary\">\n                                                Tags\n                                            </span>\n                                        </div>\n                                        <div class=\"col-md-8 col-12\">\n                                            ${dataset.tags.map(tag => `<span class=\"badge bg-primary me-1\" style=\"cursor: pointer;\" onclick=\"set_tag_as_query('${tag}')\">${tag}</span>`).join('')}\n                                        </div>\n\n                                    </div>\n\n                                    <div class=\"row\">\n\n                                        <div class=\"col-md-4 col-12\">\n\n                                        </div>\n                                        <div class=\"col-md-8 col-12\">\n                                            <a href=\"${dataset.url}\" class=\"btn btn-outline-primary btn-sm\" id=\"search\" style=\"border-radius: 5px;\">\n                                                View dataset\n                                            </a>\n                                            <a href=\"/dataset/download/${dataset.id}\" class=\"btn btn-outline-primary btn-sm\" id=\"search\" style=\"border-radius: 5px;\">\n                                                Download (${dataset.total_size_in_human_format})\n                                            </a>\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n                            </div>\n                        `;\n\n                        document.getElementById('results').appendChild(card);\n                    });\n                });\n        });\n    });\n}\n\nfunction formatDate(dateString) {\n    const options = {day: 'numeric', month: 'long', year: 'numeric', hour: 'numeric', minute: 'numeric'};\n    const date = new Date(dateString);\n    return date.toLocaleString('en-US', options);\n}\n\nfunction set_tag_as_query(tagName) {\n    const queryInput = document.getElementById('query');\n    queryInput.value = tagName.trim();\n    queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n}\n\nfunction set_publication_type_as_query(publicationType) {\n    const publicationTypeSelect = document.getElementById('publication_type');\n    for (let i = 0; i < publicationTypeSelect.options.length; i++) {\n        if (publicationTypeSelect.options[i].text === publicationType.trim()) {\n            // Set the value of the select to the value of the matching option\n            publicationTypeSelect.value = publicationTypeSelect.options[i].value;\n            break;\n        }\n    }\n    publicationTypeSelect.dispatchEvent(new Event('input', {bubbles: true}));\n}\n\ndocument.getElementById('clear-filters').addEventListener('click', clearFilters);\n\nfunction clearFilters() {\n\n    // Reset the search query\n    let queryInput = document.querySelector('#query');\n    queryInput.value = \"\";\n    // queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n\n    // Reset the publication type to its default value\n    let publicationTypeSelect = document.querySelector('#publication_type');\n    publicationTypeSelect.value = \"any\"; // replace \"any\" with whatever your default value is\n    // publicationTypeSelect.dispatchEvent(new Event('input', {bubbles: true}));\n\n    // Reset the sorting option\n    let sortingOptions = document.querySelectorAll('[name=\"sorting\"]');\n    sortingOptions.forEach(option => {\n        option.checked = option.value == \"newest\"; // replace \"default\" with whatever your default value is\n        // option.dispatchEvent(new Event('input', {bubbles: true}));\n    });\n\n    // Perform a new search with the reset filters\n    queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n    //let queryInput = document.querySelector('#query');\n    //queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n\n    let urlParams = new URLSearchParams(window.location.search);\n    let queryParam = urlParams.get('query');\n\n    if (queryParam && queryParam.trim() !== '') {\n\n        const queryInput = document.getElementById('query');\n        queryInput.value = queryParam\n        queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n        console.log(\"throw event\");\n\n    } else {\n        const queryInput = document.getElementById('query');\n        queryInput.dispatchEvent(new Event('input', {bubbles: true}));\n    }\n});\n\n//# sourceURL=webpack://uvlhub/./app/modules/explore/assets/js/scripts.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./app/modules/explore/assets/js/scripts.js"]();
/******/ 	
/******/ })()
;